{"version":3,"sources":["node_modules/browser-pack/_prelude.js","web/js/main.js","main.js","node_modules/snabbdom/h.js","node_modules/snabbdom/htmldomapi.js","node_modules/snabbdom/is.js","node_modules/snabbdom/snabbdom.js","node_modules/snabbdom/vnode.js","node_modules/vdom-benchmark-base/lib/benchmark.js","node_modules/vdom-benchmark-base/lib/executor.js","node_modules/vdom-benchmark-base/lib/index.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","convertToVnodes","nodes","children","push","h","key","BenchmarkImpl","container","b","this","vnode","benchmark","snabbdom","patch","init","NAME","VERSION","prototype","setUp","tearDown","render","elm","document","createElement","appendChild","update","addEventListener","snabbdom/h","snabbdom/snabbdom","vdom-benchmark-base","2","addNS","data","ns","undefined","VNode","is","sel","c","text","arguments","array","primitive","./is","./vnode","3","tagName","createElementNS","namespaceURI","qualifiedName","createTextNode","insertBefore","parentNode","newNode","referenceNode","removeChild","node","child","parentElement","nextSibling","setTextContent","textContent","4","Array","isArray","5","isUndef","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","map","modules","api","emptyNodeAt","toLowerCase","createRmCb","childElm","listeners","parent","createElm","insertedVnodeQueue","thunk","hook","hashIdx","indexOf","dotIdx","hash","dot","tag","slice","Math","min","id","className","replace","cbs","create","emptyNode","insert","addVnodes","parentElm","before","vnodes","startIdx","invokeDestroyHook","j","destroy","removeVnodes","rm","ch","remove","updateChildren","oldCh","newCh","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","patchVnode","oldVnode","prepatch","postpatch","domApi","hooks","pre","post","./htmldomapi.js","6","7","Benchmark","running","impl","tests","reportCallback","enableTests","_runButton","getElementById","_iterationsElement","_reportElement","body","self","preventDefault","iterations","parseInt","value","run","ready","Executor","v","disabled","samples","JSON","stringify","start","./executor","8","toString","testInnerHtml","testName","innerHTML","console","log","cb","iterCb","_currentTest","_currentIter","_renderSamples","_updateSamples","_result","_tasksCount","_iter","iter","bind","finished","progress","iterataions","test","renderTime","updateTime","window","performance","now","name","setTimeout","9","initFromScript","scriptUrl","src","onload","generateBenchmarkData","units","head","initFromParentWindow","version","type","postMessage","qs","p","split","decodeURIComponent","location","search","substr","opener","testsUrl","nowOffset","Date","timing","navigationStart","./benchmark"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,YAUA,SAAAK,GAAAC,GACA,GAAAlB,GAAAO,EAAAY,IACA,KAAAZ,EAAA,EAAAA,EAAAW,EAAAJ,SAAAP,EACAP,EAAAkB,EAAAX,GACA,OAAAP,EAAAmB,SACAA,EAAAC,KAAAC,EAAA,OAAAC,IAAAtB,EAAAsB,KAAAL,EAAAjB,EAAAmB,YAEAA,EAAAC,KAAAC,EAAA,QAAAC,IAAAtB,EAAAsB,KAAAtB,EAAAsB,KAGA,OAAAH,GAGA,QAAAI,GAAAC,EAAAnB,EAAAoB,GACAC,KAAAF,UAAAA,EACAE,KAAArB,EAAAA,EACAqB,KAAAD,EAAAA,EACAC,KAAAC,MAAA,KAzBA,GAAAC,GAAAtB,EAAA,uBACAuB,EAAAvB,EAAA,qBACAwB,EAAAD,EAAAE,SACAV,EAAAf,EAAA,cAEA0B,EAAA,WACAC,EAAA,OAsBAV,GAAAW,UAAAC,MAAA,aAGAZ,EAAAW,UAAAE,SAAA,WACAN,EAAAJ,KAAAC,MAAAN,EAAA,SAGAE,EAAAW,UAAAG,OAAA,WACA,GAAAC,GAAAC,SAAAC,cAAA,MACAd,MAAAC,MAAAG,EAAAQ,EAAAjB,EAAA,MAAAJ,EAAAS,KAAArB,KACAqB,KAAAF,UAAAiB,YAAAH,IAGAf,EAAAW,UAAAQ,OAAA,WACAhB,KAAAC,MAAAG,EAAAJ,KAAAC,MAAAN,EAAA,MAAAJ,EAAAS,KAAAD,MAGAc,SAAAI,iBAAA,mBAAA,SAAA7C,GACA8B,EAAAI,EAAAC,EAAAV,KACA,KCGGqB,aAAa,EAAEC,oBAAoB,EAAEC,sBAAsB,IAAIC,GAAG,SAASzC,EAAQU,EAAOJ,GCjD7F,QAAAoC,GAAAC,EAAA9B,GAEA,GADA8B,EAAAC,GAAA,6BACAC,SAAAhC,EACA,IAAA,GAAAZ,GAAA,EAAAA,EAAAY,EAAAL,SAAAP,EACAyC,EAAA7B,EAAAZ,GAAA0C,KAAA9B,EAAAZ,GAAAY,UAPA,GAAAiC,GAAA9C,EAAA,WACA+C,EAAA/C,EAAA,OAWAU,GAAAJ,QAAA,SAAA0C,EAAA7B,EAAA8B,GACA,GAAApC,GAAAqC,EAAAjD,EAAA0C,IAUA,IATA,IAAAQ,UAAA3C,QACAmC,EAAAxB,EACA4B,EAAAK,MAAAH,GAAApC,EAAAoC,EACAF,EAAAM,UAAAJ,KAAAC,EAAAD,IACA,IAAAE,UAAA3C,SACAuC,EAAAK,MAAAjC,GAAAN,EAAAM,EACA4B,EAAAM,UAAAlC,GAAA+B,EAAA/B,EACAwB,EAAAxB,GAEA4B,EAAAK,MAAAvC,GACA,IAAAZ,EAAA,EAAAA,EAAAY,EAAAL,SAAAP,EACA8C,EAAAM,UAAAxC,EAAAZ,MAAAY,EAAAZ,GAAA6C,EAAAD,OAAAA,OAAAA,OAAAhC,EAAAZ,IAMA,OAHA,MAAA+C,EAAA,IAAA,MAAAA,EAAA,IAAA,MAAAA,EAAA,IACAN,EAAAC,EAAA9B,GAEAiC,EAAAE,EAAAL,EAAA9B,EAAAqC,EAAAL,WDwDGS,OAAO,EAAEC,UAAU,IAAIC,GAAG,SAASxD,EAAQU,EAAOJ,GEvFrD,QAAA4B,GAAAuB,GACA,MAAAxB,UAAAC,cAAAuB,GAGA,QAAAC,GAAAC,EAAAC,GACA,MAAA3B,UAAAyB,gBAAAC,EAAAC,GAGA,QAAAC,GAAAX,GACA,MAAAjB,UAAA4B,eAAAX,GAIA,QAAAY,GAAAC,EAAAC,EAAAC,GACAF,EAAAD,aAAAE,EAAAC,GAIA,QAAAC,GAAAC,EAAAC,GACAD,EAAAD,YAAAE,GAGA,QAAAjC,GAAAgC,EAAAC,GACAD,EAAAhC,YAAAiC,GAGA,QAAAL,GAAAI,GACA,MAAAA,GAAAE,cAGA,QAAAC,GAAAH,GACA,MAAAA,GAAAG,YAGA,QAAAb,GAAAU,GACA,MAAAA,GAAAV,QAGA,QAAAc,GAAAJ,EAAAjB,GACAiB,EAAAK,YAAAtB,EAGAxC,EAAAJ,SACA4B,cAAAA,EACAwB,gBAAAA,EACAG,eAAAA,EACA1B,YAAAA,EACA+B,YAAAA,EACAJ,aAAAA,EACAC,WAAAA,EACAO,YAAAA,EACAb,QAAAA,EACAc,eAAAA,QF2FME,GAAG,SAASzE,EAAQU,EAAOJ,GG/IjCI,EAAAJ,SACA8C,MAAAsB,MAAAC,QACAtB,UAAA,SAAAzD,GAAA,MAAA,gBAAAA,IAAA,gBAAAA,UHmJMgF,GAAG,SAAS5E,EAAQU,EAAOJ,GInJjC,YAMA,SAAAuE,GAAAjF,GAAA,MAAAiD,UAAAjD,EACA,QAAAkF,GAAAlF,GAAA,MAAAiD,UAAAjD,EAIA,QAAAmF,GAAAC,EAAAC,GACA,MAAAD,GAAAhE,MAAAiE,EAAAjE,KAAAgE,EAAAhC,MAAAiC,EAAAjC,IAGA,QAAAkC,GAAArE,EAAAsE,EAAAC,GACA,GAAAnF,GAAAe,EAAAqE,IACA,KAAApF,EAAAkF,EAAAC,GAAAnF,IAAAA,EACAe,EAAAH,EAAAZ,GAAAe,IACA8D,EAAA9D,KAAAqE,EAAArE,GAAAf,EAEA,OAAAoF,GAKA,QAAA5D,GAAA6D,EAAAC,GAYA,QAAAC,GAAAxD,GACA,MAAAc,GAAAyC,EAAA9B,QAAAzB,GAAAyD,oBAAA5C,OAAAb,GAGA,QAAA0D,GAAAC,EAAAC,GACA,MAAA,YACA,GAAA,MAAAA,EAAA,CACA,GAAAC,GAAAN,EAAAxB,WAAA4B,EACAJ,GAAArB,YAAA2B,EAAAF,KAKA,QAAAG,GAAAzE,EAAA0E,GACA,GAAA9F,GAAA+F,EAAArD,EAAAtB,EAAAsB,IACAmC,GAAAnC,KACAmC,EAAA7E,EAAA0C,EAAAsD,OAAAnB,EAAA7E,EAAAA,EAAAwB,OAAAxB,EAAAoB,GACAyD,EAAA7E,EAAA0C,EAAAtB,SACA2E,EAAA3E,EACAA,EAAApB,GAGA,IAAA+B,GAAAnB,EAAAQ,EAAAR,SAAAmC,EAAA3B,EAAA2B,GACA,IAAA8B,EAAA9B,GAAA,CAEA,GAAAkD,GAAAlD,EAAAmD,QAAA,KACAC,EAAApD,EAAAmD,QAAA,IAAAD,GACAG,EAAAH,EAAA,EAAAA,EAAAlD,EAAAxC,OACA8F,EAAAF,EAAA,EAAAA,EAAApD,EAAAxC,OACA+F,EAAA,KAAAL,GAAA,KAAAE,EAAApD,EAAAwD,MAAA,EAAAC,KAAAC,IAAAL,EAAAC,IAAAtD,CAKA,IAJAhB,EAAAX,EAAAW,IAAA8C,EAAAnC,IAAAmC,EAAA7E,EAAA0C,EAAAC,IAAA2C,EAAA7B,gBAAAzD,EAAAsG,GACAhB,EAAArD,cAAAqE,GACAD,EAAAD,IAAArE,EAAA2E,GAAA3D,EAAAwD,MAAAH,EAAA,EAAAC,IACAF,EAAA,IAAApE,EAAA4E,UAAA5D,EAAAwD,MAAAF,EAAA,GAAAO,QAAA,MAAA,MACA9D,EAAAK,MAAAvC,GACA,IAAAZ,EAAA,EAAAA,EAAAY,EAAAL,SAAAP,EACAsF,EAAApD,YAAAH,EAAA8D,EAAAjF,EAAAZ,GAAA8F,QAEAhD,GAAAM,UAAAhC,EAAA6B,OACAqC,EAAApD,YAAAH,EAAAuD,EAAA1B,eAAAxC,EAAA6B,MAEA,KAAAjD,EAAA,EAAAA,EAAA6G,EAAAC,OAAAvG,SAAAP,EAAA6G,EAAAC,OAAA9G,GAAA+G,EAAA3F,EACApB,GAAAoB,EAAAsB,KAAAsD,KACAnB,EAAA7E,KACAA,EAAA8G,QAAA9G,EAAA8G,OAAAC,EAAA3F,GACApB,EAAAgH,QAAAlB,EAAAjF,KAAAO,QAGAW,GAAAX,EAAAW,IAAAuD,EAAA1B,eAAAxC,EAAA6B,KAGA,OADA4B,GAAAkB,KAAAA,EAAAhE,IAAAX,EAAAW,KACAX,EAAAW,IAGA,QAAAkF,GAAAC,EAAAC,EAAAC,EAAAC,EAAAlC,EAAAW,GACA,KAAAX,GAAAkC,IAAAA,EACA/B,EAAAzB,aAAAqD,EAAArB,EAAAuB,EAAAC,GAAAvB,GAAAqB,GAIA,QAAAG,GAAAlG,GACA,GAAApB,GAAAuH,EAAA7E,EAAAtB,EAAAsB,IACA,IAAAmC,EAAAnC,GAAA,CAEA,IADAmC,EAAA7E,EAAA0C,EAAAsD,OAAAnB,EAAA7E,EAAAA,EAAAwH,UAAAxH,EAAAoB,GACApB,EAAA,EAAAA,EAAA6G,EAAAW,QAAAjH,SAAAP,EAAA6G,EAAAW,QAAAxH,GAAAoB,EACA,IAAAyD,EAAA7E,EAAAoB,EAAAR,UACA,IAAA2G,EAAA,EAAAA,EAAAnG,EAAAR,SAAAL,SAAAgH,EACAD,EAAAlG,EAAAR,SAAA2G,GAGA1C,GAAA7E,EAAA0C,EAAAtB,QAAAkG,EAAAtH,IAIA,QAAAyH,GAAAP,EAAAE,EAAAC,EAAAlC,GACA,KAAAA,GAAAkC,IAAAA,EAAA,CACA,GAAArH,GAAA2F,EAAA+B,EAAAC,EAAAP,EAAAC,EACA,IAAAxC,EAAA8C,GACA,GAAA9C,EAAA8C,EAAA5E,KAAA,CAIA,IAHAuE,EAAAK,GACAhC,EAAAkB,EAAAe,OAAArH,OAAA,EACAmH,EAAAjC,EAAAkC,EAAA5F,IAAA4D,GACA3F,EAAA,EAAAA,EAAA6G,EAAAe,OAAArH,SAAAP,EAAA6G,EAAAe,OAAA5H,GAAA2H,EAAAD,EACA7C,GAAA7E,EAAA2H,EAAAjF,OAAAmC,EAAA7E,EAAAA,EAAAgG,OAAAnB,EAAA7E,EAAAA,EAAA4H,QACA5H,EAAA2H,EAAAD,GAEAA,QAGApC,GAAArB,YAAAiD,EAAAS,EAAA5F,MAMA,QAAA8F,GAAAX,EAAAY,EAAAC,EAAAjC,GAUA,IATA,GAOAkC,GAAAC,EAAAC,EAAAf,EAPAgB,EAAA,EAAAC,EAAA,EACAC,EAAAP,EAAAvH,OAAA,EACA+H,EAAAR,EAAA,GACAS,EAAAT,EAAAO,GACAG,EAAAT,EAAAxH,OAAA,EACAkI,EAAAV,EAAA,GACAW,EAAAX,EAAAS,GAGAH,GAAAF,GAAAK,GAAAJ,GACAxD,EAAA0D,GACAA,EAAAR,IAAAK,GACAvD,EAAA2D,GACAA,EAAAT,IAAAO,GACAvD,EAAAwD,EAAAG,IACAE,EAAAL,EAAAG,EAAA3C,GACAwC,EAAAR,IAAAK,GACAM,EAAAV,IAAAK,IACAtD,EAAAyD,EAAAG,IACAC,EAAAJ,EAAAG,EAAA5C,GACAyC,EAAAT,IAAAO,GACAK,EAAAX,IAAAS,IACA1D,EAAAwD,EAAAI,IACAC,EAAAL,EAAAI,EAAA5C,GACAR,EAAAzB,aAAAqD,EAAAoB,EAAAvG,IAAAuD,EAAAjB,YAAAkE,EAAAxG,MACAuG,EAAAR,IAAAK,GACAO,EAAAX,IAAAS,IACA1D,EAAAyD,EAAAE,IACAE,EAAAJ,EAAAE,EAAA3C,GACAR,EAAAzB,aAAAqD,EAAAqB,EAAAxG,IAAAuG,EAAAvG,KACAwG,EAAAT,IAAAO,GACAI,EAAAV,IAAAK,KAEAxD,EAAAoD,KAAAA,EAAA/C,EAAA6C,EAAAK,EAAAE,IACAJ,EAAAD,EAAAS,EAAA1H,KACA6D,EAAAqD,IACA3C,EAAAzB,aAAAqD,EAAArB,EAAA4C,EAAA3C,GAAAwC,EAAAvG,KACA0G,EAAAV,IAAAK,KAEAF,EAAAJ,EAAAG,GACAU,EAAAT,EAAAO,EAAA3C,GACAgC,EAAAG,GAAArF,OACA0C,EAAAzB,aAAAqD,EAAAgB,EAAAnG,IAAAuG,EAAAvG,KACA0G,EAAAV,IAAAK,IAIAD,GAAAE,GACAlB,EAAAvC,EAAAmD,EAAAS,EAAA,IAAA,KAAAT,EAAAS,EAAA,GAAAzG,IACAkF,EAAAC,EAAAC,EAAAY,EAAAK,EAAAI,EAAA1C,IACAsC,EAAAI,GACAf,EAAAP,EAAAY,EAAAK,EAAAE,GAIA,QAAAM,GAAAC,EAAAxH,EAAA0E,GACA,GAAA9F,GAAAgG,CAKA,IAJAnB,EAAA7E,EAAAoB,EAAAsB,OAAAmC,EAAAmB,EAAAhG,EAAAgG,OAAAnB,EAAA7E,EAAAgG,EAAA6C,WACA7I,EAAA4I,EAAAxH,GAEAyD,EAAA7E,EAAA4I,EAAAlG,OAAAmC,EAAA7E,EAAAA,EAAAoB,SAAAwH,EAAA5I,GACA6E,EAAA7E,EAAAoB,EAAAsB,OAAAmC,EAAA7E,EAAAA,EAAAoB,OAGA,MAFAuH,GAAAC,EAAA5I,EAAA8F,QACA1E,EAAAW,IAAA/B,EAAA+B,IAGA,IAAAA,GAAAX,EAAAW,IAAA6G,EAAA7G,IAAA+F,EAAAc,EAAAhI,SAAA+G,EAAAvG,EAAAR,QACA,IAAAgI,IAAAxH,EAAA,CACA,IAAA0D,EAAA8D,EAAAxH,GAAA,CACA,GAAA8F,GAAA5B,EAAAxB,WAAA8E,EAAA7G,IAIA,OAHAA,GAAA8D,EAAAzE,EAAA0E,GACAR,EAAAzB,aAAAqD,EAAAnF,EAAA6G,EAAA7G,SACA0F,GAAAP,GAAA0B,GAAA,EAAA,GAGA,GAAA/D,EAAAzD,EAAAsB,MAAA,CACA,IAAA1C,EAAA,EAAAA,EAAA6G,EAAA1E,OAAA5B,SAAAP,EAAA6G,EAAA1E,OAAAnC,GAAA4I,EAAAxH,EACApB,GAAAoB,EAAAsB,KAAAsD,KACAnB,EAAA7E,IAAA6E,EAAA7E,EAAAA,EAAAmC,SAAAnC,EAAA4I,EAAAxH,GAEAwD,EAAAxD,EAAA6B,MACA4B,EAAAiD,IAAAjD,EAAA8C,GACAG,IAAAH,GAAAE,EAAA9F,EAAA+F,EAAAH,EAAA7B,GACAjB,EAAA8C,IACA9C,EAAA+D,EAAA3F,OAAAqC,EAAAhB,eAAAvC,EAAA,IACAkF,EAAAlF,EAAA,KAAA4F,EAAA,EAAAA,EAAApH,OAAA,EAAAuF,IACAjB,EAAAiD,GACAL,EAAA1F,EAAA+F,EAAA,EAAAA,EAAAvH,OAAA,GACAsE,EAAA+D,EAAA3F,OACAqC,EAAAhB,eAAAvC,EAAA,IAEA6G,EAAA3F,OAAA7B,EAAA6B,MACAqC,EAAAhB,eAAAvC,EAAAX,EAAA6B,MAEA4B,EAAAmB,IAAAnB,EAAA7E,EAAAgG,EAAA8C,YACA9I,EAAA4I,EAAAxH,IA1MA,GAAApB,GAAAuH,EAAAV,IAIA,KAFAjC,EAAAU,KAAAA,EAAAyD,GAEA/I,EAAA,EAAAA,EAAAgJ,EAAAzI,SAAAP,EAEA,IADA6G,EAAAmC,EAAAhJ,OACAuH,EAAA,EAAAA,EAAAlC,EAAA9E,SAAAgH,EACA3E,SAAAyC,EAAAkC,GAAAyB,EAAAhJ,KAAA6G,EAAAmC,EAAAhJ,IAAAa,KAAAwE,EAAAkC,GAAAyB,EAAAhJ,IAuMA,OAAA,UAAA4I,EAAAxH,GACA,GAAApB,GAAA+B,EAAA6D,EACAE,IACA,KAAA9F,EAAA,EAAAA,EAAA6G,EAAAoC,IAAA1I,SAAAP,EAAA6G,EAAAoC,IAAAjJ,IAoBA,KAlBA4E,EAAAgE,EAAA7F,OACA6F,EAAArD,EAAAqD,IAGA9D,EAAA8D,EAAAxH,GACAuH,EAAAC,EAAAxH,EAAA0E,IAEA/D,EAAA6G,EAAA7G,IACA6D,EAAAN,EAAAxB,WAAA/B,GAEA8D,EAAAzE,EAAA0E,GAEA,OAAAF,IACAN,EAAAzB,aAAA+B,EAAAxE,EAAAW,IAAAuD,EAAAjB,YAAAtC,IACA0F,EAAA7B,GAAAgD,GAAA,EAAA,KAIA5I,EAAA,EAAAA,EAAA8F,EAAAvF,SAAAP,EACA8F,EAAA9F,GAAA0C,KAAAsD,KAAAgB,OAAAlB,EAAA9F,GAEA,KAAAA,EAAA,EAAAA,EAAA6G,EAAAqC,KAAA3I,SAAAP,EAAA6G,EAAAqC,KAAAlJ,IACA,OAAAoB,IAlQA,GAAAyB,GAAA9C,EAAA,WACA+C,EAAA/C,EAAA,QACAgJ,EAAAhJ,EAAA,mBAKAgH,EAAAlE,EAAA,SAAAD,OAAAA,QAeAoG,GAAA,SAAA,SAAA,SAAA,UAAA,MAAA,OAgPAvI,GAAAJ,SAAAmB,KAAAA,KJwJG2H,kBAAkB,EAAE9F,OAAO,EAAEC,UAAU,IAAI8F,GAAG,SAASrJ,EAAQU,EAAOJ,GKlazEI,EAAAJ,QAAA,SAAA0C,EAAAL,EAAA9B,EAAAqC,EAAAlB,GACA,GAAAhB,GAAA6B,SAAAF,EAAAE,OAAAF,EAAA3B,GACA,QAAAgC,IAAAA,EAAAL,KAAAA,EAAA9B,SAAAA,EACAqC,KAAAA,EAAAlB,IAAAA,EAAAhB,IAAAA,SLsaMsI,GAAG,SAAStJ,EAAQU,EAAOJ,GMzajC,YAIA,SAAAiJ,KACAnI,KAAAoI,SAAA,EACApI,KAAAqI,KAAA,KACArI,KAAAsI,MAAA,KACAtI,KAAAuI,eAAA,KACAvI,KAAAwI,aAAA,EAEAxI,KAAAF,UAAAe,SAAAC,cAAA,OAEAd,KAAAyI,WAAA5H,SAAA6H,eAAA,aACA1I,KAAA2I,mBAAA9H,SAAA6H,eAAA,cACA1I,KAAA4I,eAAA/H,SAAAC,cAAA,OAEAD,SAAAgI,KAAA9H,YAAAf,KAAAF,WACAe,SAAAgI,KAAA9H,YAAAf,KAAA4I,eAEA,IAAAE,GAAA9I,IAEAA,MAAAyI,WAAAxH,iBAAA,QAAA,SAAA7C,GAGA,GAFAA,EAAA2K,kBAEAD,EAAAV,QAAA,CACA,GAAAY,GAAAC,SAAAH,EAAAH,mBAAAO,MACA,IAAAF,IACAA,EAAA,IAGAF,EAAAK,IAAAH,MAEA,GAEAhJ,KAAAoJ,OAAA,GAjCA,GAAAC,GAAAzK,EAAA,aAoCAuJ,GAAA3H,UAAA4I,MAAA,SAAAE,GACAA,EACAtJ,KAAAyI,WAAAc,SAAA,GAEAvJ,KAAAyI,WAAAc,SAAA,QAIApB,EAAA3H,UAAA2I,IAAA,SAAAH,GACA,GAAAF,GAAA9I,IACAA,MAAAoI,SAAA,EACApI,KAAAoJ,OAAA,GAEA,GAAAC,GAAAP,EAAAT,KAAAS,EAAAhJ,UAAAgJ,EAAAR,MAAA,EAAA,WACA,GAAAe,GAAAP,EAAAT,KAAAS,EAAAhJ,UAAAgJ,EAAAR,MAAAU,EAAA,SAAAQ,GACAV,EAAAF,eAAAxF,YAAAqG,KAAAC,UAAAF,EAAA,KAAA,KACAV,EAAAV,SAAA,EACAU,EAAAM,OAAA,GACA,MAAAN,EAAAP,gBACAO,EAAAP,eAAAiB,IAEA/H,QAAA,GAAAkI,SACAlI,OAAAzB,KAAAwI,aAAAmB,SAGArK,EAAAJ,QAAAiJ,IN4aGyB,aAAa,IAAIC,GAAG,SAASjL,EAAQU,EAAOJ,GO3e/C,YAEA,SAAAyB,GAAAnB,GACA,GACA4G,GACAvE,EACAhD,EACAT,EACAE,EALAmB,IAOA,KAAAZ,EAAA,EAAAA,EAAAW,EAAAJ,OAAAP,IAEA,GADAP,EAAAkB,EAAAX,GACA,OAAAP,EAAAmB,SAAA,CAGA,IAFArB,EAAAyC,SAAAC,cAAA,OACAe,EAAAlB,EAAArC,EAAAmB,UACA2G,EAAA,EAAAA,EAAAvE,EAAAzC,OAAAgH,IACAhI,EAAA2C,YAAAc,EAAAuE,GAEA3G,GAAAC,KAAAtB,OAEAA,GAAAyC,SAAAC,cAAA,QACA1C,EAAAgF,YAAA9E,EAAAsB,IAAAkK,WACArK,EAAAC,KAAAtB,EAIA,OAAAqB,GAGA,QAAAsK,GAAAC,EAAAxK,EAAAM,GAIA,IAAA,GAHA+B,GAAAhB,SAAAC,cAAA,OACA1C,EAAAyC,SAAAC,cAAA,OACArB,EAAAkB,EAAAnB,GACAX,EAAA,EAAAA,EAAAY,EAAAL,OAAAP,IACAT,EAAA2C,YAAAtB,EAAAZ,GAEAgD,GAAAd,YAAA3C,GACAyD,EAAAoI,YAAAnK,EAAAmK,YACAC,QAAAC,IAAA,kBAAAH,GACAE,QAAAC,IAAA,wBACAD,QAAAC,IAAArK,EAAAmK,WACAC,QAAAC,IAAA,cACAD,QAAAC,IAAAtI,EAAAoI,YAKA,QAAAZ,GAAAhB,EAAAvI,EAAAwI,EAAAU,EAAAoB,EAAAC,EAAA7B,GACA,SAAA6B,IAAAA,EAAA,MAEArK,KAAAqI,KAAAA,EACArI,KAAAF,UAAAA,EACAE,KAAAsI,MAAAA,EACAtI,KAAAgJ,WAAAA,EACAhJ,KAAAoK,GAAAA,EACApK,KAAAqK,OAAAA,EACArK,KAAAwI,YAAAA,EAEAxI,KAAAsK,aAAA,EACAtK,KAAAuK,aAAA,EACAvK,KAAAwK,kBACAxK,KAAAyK,kBACAzK,KAAA0K,WAEA1K,KAAA2K,YAAArC,EAAAlJ,OAAA4J,EAEAhJ,KAAA4K,MAAA5K,KAAA6K,KAAAC,KAAA9K,MAGAqJ,EAAA7I,UAAAmJ,MAAA,WACA3J,KAAA4K,SAGAvB,EAAA7I,UAAAuK,SAAA,WACA/K,KAAAoK,GAAApK,KAAA0K,UAGArB,EAAA7I,UAAAwK,SAAA,WACA,GAAA,IAAAhL,KAAAsK,cAAA,IAAAtK,KAAAuK,aACA,MAAA,EAGA,IAAAjC,GAAAtI,KAAAsI,KACA,QAAAtI,KAAAsK,aAAAhC,EAAAlJ,OAAAY,KAAAuK,eAAAjC,EAAAlJ,OAAAY,KAAAiL,cAGA5B,EAAA7I,UAAAqK,KAAA,WACA,MAAA7K,KAAAqK,QACArK,KAAAqK,OAAArK,KAGA,IAAAsI,GAAAtI,KAAAsI,KAEA,IAAAtI,KAAAsK,aAAAhC,EAAAlJ,OAAA,CACA,GAAA8L,GAAA5C,EAAAtI,KAAAsK,aAEA,IAAAtK,KAAAuK,aAAAvK,KAAAgJ,WAAA,CACA,GAAA5K,GAAAC,EACA8M,EAAAC,CAEAhN,GAAA,GAAA4B,MAAAqI,KAAArI,KAAAF,UAAAoL,EAAA3J,KAAA5C,EAAAuM,EAAA3J,KAAAxB,GACA3B,EAAAqC,QAEApC,EAAAgN,OAAAC,YAAAC,MACAnN,EAAAuC,SACAwK,EAAAE,OAAAC,YAAAC,MAAAlN,EAEA2B,KAAAwI,aACAuB,EAAAmB,EAAAM,KAAA,WAAAN,EAAA3J,KAAA5C,EAAAqB,KAAAF,WAGAzB,EAAAgN,OAAAC,YAAAC,MACAnN,EAAA4C,SACAoK,EAAAC,OAAAC,YAAAC,MAAAlN,EAEA2B,KAAAwI,aACAuB,EAAAmB,EAAAM,KAAA,WAAAN,EAAA3J,KAAAxB,EAAAC,KAAAF,WAGA1B,EAAAsC,WAEAV,KAAAwK,eAAA9K,KAAAyL,GACAnL,KAAAyK,eAAA/K,KAAA0L,GAEApL,KAAAuK,mBAEAvK,MAAA0K,QAAAhL,MACA8L,KAAAN,EAAAM,KAAA,YACAjK,KAAAvB,KAAAwK,eAAApF,MAAA,KAGApF,KAAA0K,QAAAhL,MACA8L,KAAAN,EAAAM,KAAA,YACAjK,KAAAvB,KAAAyK,eAAArF,MAAA,KAGApF,KAAAsK,eAEAtK,KAAAuK,aAAA,EACAvK,KAAAwK,kBACAxK,KAAAyK,iBAGAgB,YAAAzL,KAAA4K,MAAA,OAEA5K,MAAA+K,YAIAzL,EAAAJ,QAAAmK,OP8eMqC,GAAG,SAAS9M,EAAQU,EAAOJ,GQnoBjC,YAKA,SAAAyM,GAAAC,EAAAvD,GACA,GAAAjK,GAAAyC,SAAAC,cAAA,SACA1C,GAAAyN,IAAAD,EAEAxN,EAAA0N,OAAA,WACA5L,EAAAoI,MAAA+C,OAAAU,wBAAAC,MACA9L,EAAAkJ,OAAA,IAGAvI,SAAAoL,KAAAlL,YAAA3C,GAGA,QAAA8N,GAAAzH,EAAA+G,EAAAW,EAAA5G,GACA8F,OAAApK,iBAAA,UAAA,SAAA7C,GACA,GAAAmD,GAAAnD,EAAAmD,KACA6K,EAAA7K,EAAA6K,IAEA,WAAAA,GACAlM,EAAAoI,MAAA/G,EAAAA,KACArB,EAAAqI,eAAA,SAAAiB,GACA/E,EAAA4H,aACAD,KAAA,SACA7K,MACAiK,KAAAA,EACAW,QAAAA,EACA3C,QAAAA,GAEAjE,GAAAA,GACA,MAEArF,EAAAkJ,OAAA,GAEA3E,EAAA4H,aACAD,KAAA,QACA7K,KAAA,KACAgE,GAAAA,GACA,MACA,QAAA6G,GACAlM,EAAAiJ,IAAA5H,EAAAA,KAAAyH,cAEA,GAEAvE,EAAA4H,aACAD,KAAA,OACA7K,KAAA,KACAgE,GAAAA,GACA,KAGA,QAAAlF,GAAAmL,EAAAW,EAAA9D,GAEA,GAAAiE,GAAA,SAAA3N,GACA,GAAA,IAAAA,EAAA,QAEA,KAAA,GADAoB,MACAlB,EAAA,EAAAA,EAAAF,EAAAS,SAAAP,EAAA,CACA,GAAA0N,GAAA5N,EAAAE,GAAA2N,MAAA,IAAA,EACA,IAAAD,EAAAnN,OACAW,EAAAwM,EAAA,IAAA,GAEAxM,EAAAwM,EAAA,IAAAE,mBAAAF,EAAA,GAAA9G,QAAA,MAAA,MAGA,MAAA1F,IACAsL,OAAAqB,SAAAC,OAAAC,OAAA,GAAAJ,MAAA,KAEA,UAAAF,EAAA,OACAd,EAAAc,EAAA,MAGA,SAAAA,EAAA,UACAH,EAAAG,EAAA,QAGA,IAAAF,GAAAE,EAAA,IAEA,UAAAA,EAAA,OACApM,EAAAsI,aAAA,EACA0B,QAAAC,IAAA,iBAGA,IAAA5E,EACA,IAAA,WAAA6G,EACA7G,EAAA+G,EAAA,GACA,SAAA/G,IAAAA,EAAA,MACA2G,EAAAb,OAAA5G,OAAA+G,EAAAW,EAAA5G,OACA,IAAA,WAAA6G,EACA,MAAAf,OAAAwB,QACAtH,EAAA+G,EAAA,GACA,SAAA/G,IAAAA,EAAA,MACA2G,EAAAb,OAAAwB,OAAArB,EAAAW,EAAA5G,IAEA2E,QAAAC,IAAA,mDAEA,CACA,GAAA2C,GAAAR,EAAA,IACA,UAAAQ,EACAnB,EAAAmB,GAEA5C,QAAAC,IAAA,gDAIAjK,EAAAmI,KAAAA,EAzGA,GAAAF,GAAAvJ,EAAA,eACAsB,EAAA,GAAAiI,EAiHA,IAHA,mBAAAkD,QAAAC,cACAD,OAAAC,iBAEAD,OAAAC,YAAAC,IAAA,CACA,GAAAwB,GAAAC,KAAAzB,KACAD,aAAA2B,QAAA3B,YAAA2B,OAAAC,kBACAH,EAAAzB,YAAA2B,OAAAC,iBAEA7B,OAAAC,YAAAC,IAAA,WACA,MAAAyB,MAAAzB,MAAAwB,GAIAzN,EAAAJ,QAAAmB,IRsoBG8M,cAAc,SAAS","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar benchmark = require('vdom-benchmark-base');\nvar snabbdom = require('snabbdom/snabbdom');\nvar patch = snabbdom.init([]);\nvar h = require('snabbdom/h');\n\nvar NAME = 'snabbdom';\nvar VERSION = '0.1.0';\n\nfunction convertToVnodes(nodes) {\n  var n, i, children = [];\n  for (i = 0; i < nodes.length; ++i) {\n    n = nodes[i];\n    if (n.children !== null) {\n      children.push(h('div', {key: n.key}, convertToVnodes(n.children)));\n    } else {\n      children.push(h('span', {key: n.key}, n.key));\n    }\n  }\n  return children;\n}\n\nfunction BenchmarkImpl(container, a, b) {\n  this.container = container;\n  this.a = a;\n  this.b = b;\n  this.vnode = null;\n}\n\nBenchmarkImpl.prototype.setUp = function() {\n};\n\nBenchmarkImpl.prototype.tearDown = function() {\n  patch(this.vnode, h('div'));\n};\n\nBenchmarkImpl.prototype.render = function() {\n  var elm = document.createElement('div');\n  this.vnode = patch(elm, h('div', convertToVnodes(this.a)));\n  this.container.appendChild(elm);\n};\n\nBenchmarkImpl.prototype.update = function() {\n  this.vnode = patch(this.vnode, h('div', convertToVnodes(this.b)));\n};\n\ndocument.addEventListener('DOMContentLoaded', function(e) {\n  benchmark(NAME, VERSION, BenchmarkImpl);\n}, false);\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar benchmark = require('vdom-benchmark-base');\nvar snabbdom = require('snabbdom/snabbdom');\nvar patch = snabbdom.init([]);\nvar h = require('snabbdom/h');\n\nvar NAME = 'snabbdom';\nvar VERSION = '0.1.0';\n\nfunction convertToVnodes(nodes) {\n  var n, i, children = [];\n  for (i = 0; i < nodes.length; ++i) {\n    n = nodes[i];\n    if (n.children !== null) {\n      children.push(h('div', {key: n.key}, convertToVnodes(n.children)));\n    } else {\n      children.push(h('span', {key: n.key}, n.key));\n    }\n  }\n  return children;\n}\n\nfunction BenchmarkImpl(container, a, b) {\n  this.container = container;\n  this.a = a;\n  this.b = b;\n  this.vnode = null;\n}\n\nBenchmarkImpl.prototype.setUp = function() {\n};\n\nBenchmarkImpl.prototype.tearDown = function() {\n  patch(this.vnode, h('div'));\n};\n\nBenchmarkImpl.prototype.render = function() {\n  var elm = document.createElement('div');\n  this.vnode = patch(elm, h('div', convertToVnodes(this.a)));\n  this.container.appendChild(elm);\n};\n\nBenchmarkImpl.prototype.update = function() {\n  this.vnode = patch(this.vnode, h('div', convertToVnodes(this.b)));\n};\n\ndocument.addEventListener('DOMContentLoaded', function(e) {\n  benchmark(NAME, VERSION, BenchmarkImpl);\n}, false);\n\n},{\"snabbdom/h\":2,\"snabbdom/snabbdom\":5,\"vdom-benchmark-base\":9}],2:[function(require,module,exports){\nvar VNode = require('./vnode');\nvar is = require('./is');\n\nfunction addNS(data, children) {\n  data.ns = 'http://www.w3.org/2000/svg';\n  if (children !== undefined) {\n    for (var i = 0; i < children.length; ++i) {\n      addNS(children[i].data, children[i].children);\n    }\n  }\n}\n\nmodule.exports = function h(sel, b, c) {\n  var data = {}, children, text, i;\n  if (arguments.length === 3) {\n    data = b;\n    if (is.array(c)) { children = c; }\n    else if (is.primitive(c)) { text = c; }\n  } else if (arguments.length === 2) {\n    if (is.array(b)) { children = b; }\n    else if (is.primitive(b)) { text = b; }\n    else { data = b; }\n  }\n  if (is.array(children)) {\n    for (i = 0; i < children.length; ++i) {\n      if (is.primitive(children[i])) children[i] = VNode(undefined, undefined, undefined, children[i]);\n    }\n  }\n  if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g') {\n    addNS(data, children);\n  }\n  return VNode(sel, data, children, text, undefined);\n};\n\n},{\"./is\":4,\"./vnode\":6}],3:[function(require,module,exports){\nfunction createElement(tagName){\n  return document.createElement(tagName);\n}\n\nfunction createElementNS(namespaceURI, qualifiedName){\n  return document.createElementNS(namespaceURI, qualifiedName);\n}\n\nfunction createTextNode(text){\n  return document.createTextNode(text);\n}\n\n\nfunction insertBefore(parentNode, newNode, referenceNode){\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\n\nfunction removeChild(node, child){\n  node.removeChild(child);\n}\n\nfunction appendChild(node, child){\n  node.appendChild(child);\n}\n\nfunction parentNode(node){\n  return node.parentElement;\n}\n\nfunction nextSibling(node){\n  return node.nextSibling;\n}\n\nfunction tagName(node){\n  return node.tagName;\n}\n\nfunction setTextContent(node, text){\n  node.textContent = text;\n}\n\nmodule.exports = {\n  createElement: createElement,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  appendChild: appendChild,\n  removeChild: removeChild,\n  insertBefore: insertBefore,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent\n};\n\n},{}],4:[function(require,module,exports){\nmodule.exports = {\n  array: Array.isArray,\n  primitive: function(s) { return typeof s === 'string' || typeof s === 'number'; },\n};\n\n},{}],5:[function(require,module,exports){\n// jshint newcap: false\n/* global require, module, document, Node */\n'use strict';\n\nvar VNode = require('./vnode');\nvar is = require('./is');\nvar domApi = require('./htmldomapi.js');\n\nfunction isUndef(s) { return s === undefined; }\nfunction isDef(s) { return s !== undefined; }\n\nvar emptyNode = VNode('', {}, [], undefined, undefined);\n\nfunction sameVnode(vnode1, vnode2) {\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  var i, map = {}, key;\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) map[key] = i;\n  }\n  return map;\n}\n\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\n\nfunction init(modules, api) {\n  var i, j, cbs = {};\n\n  if (isUndef(api)) api = domApi;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) cbs[hooks[i]].push(modules[j][hooks[i]]);\n    }\n  }\n\n  function emptyNodeAt(elm) {\n    return VNode(api.tagName(elm).toLowerCase(), {}, [], undefined, elm);\n  }\n\n  function createRmCb(childElm, listeners) {\n    return function() {\n      if (--listeners === 0) {\n        var parent = api.parentNode(childElm);\n        api.removeChild(parent, childElm);\n      }\n    };\n  }\n\n  function createElm(vnode, insertedVnodeQueue) {\n    var i, thunk, data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode);\n      if (isDef(i = data.vnode)) {\n          thunk = vnode;\n          vnode = i;\n      }\n    }\n    var elm, children = vnode.children, sel = vnode.sel;\n    if (isDef(sel)) {\n      // Parse selector\n      var hashIdx = sel.indexOf('#');\n      var dotIdx = sel.indexOf('.', hashIdx);\n      var hash = hashIdx > 0 ? hashIdx : sel.length;\n      var dot = dotIdx > 0 ? dotIdx : sel.length;\n      var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n      elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)\n                                                          : api.createElement(tag);\n      if (hash < dot) elm.id = sel.slice(hash + 1, dot);\n      if (dotIdx > 0) elm.className = sel.slice(dot+1).replace(/\\./g, ' ');\n      if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n          api.appendChild(elm, createElm(children[i], insertedVnodeQueue));\n        }\n      } else if (is.primitive(vnode.text)) {\n        api.appendChild(elm, api.createTextNode(vnode.text));\n      }\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode);\n      i = vnode.data.hook; // Reuse variable\n      if (isDef(i)) {\n        if (i.create) i.create(emptyNode, vnode);\n        if (i.insert) insertedVnodeQueue.push(vnode);\n      }\n    } else {\n      elm = vnode.elm = api.createTextNode(vnode.text);\n    }\n    if (isDef(thunk)) thunk.elm = vnode.elm;\n    return vnode.elm;\n  }\n\n  function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      api.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before);\n    }\n  }\n\n  function invokeDestroyHook(vnode) {\n    var i, j, data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode);\n      for (i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode);\n      if (isDef(i = vnode.children)) {\n        for (j = 0; j < vnode.children.length; ++j) {\n          invokeDestroyHook(vnode.children[j]);\n        }\n      }\n      if (isDef(i = data.vnode)) invokeDestroyHook(i);\n    }\n  }\n\n  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var i, listeners, rm, ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.sel)) {\n          invokeDestroyHook(ch);\n          listeners = cbs.remove.length + 1;\n          rm = createRmCb(ch.elm, listeners);\n          for (i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm);\n          if (isDef(i = ch.data) && isDef(i = i.hook) && isDef(i = i.remove)) {\n            i(ch, rm);\n          } else {\n            rm();\n          }\n        } else { // Text node\n          api.removeChild(parentElm, ch.elm);\n        }\n      }\n    }\n  }\n\n  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n    var oldStartIdx = 0, newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, before;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        idxInOld = oldKeyToIdx[newStartVnode.key];\n        if (isUndef(idxInOld)) { // New element\n          api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n          oldCh[idxInOld] = undefined;\n          api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      before = isUndef(newCh[newEndIdx+1]) ? null : newCh[newEndIdx+1].elm;\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n    var i, hook;\n    if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    if (isDef(i = oldVnode.data) && isDef(i = i.vnode)) oldVnode = i;\n    if (isDef(i = vnode.data) && isDef(i = i.vnode)) {\n      patchVnode(oldVnode, i, insertedVnodeQueue);\n      vnode.elm = i.elm;\n      return;\n    }\n    var elm = vnode.elm = oldVnode.elm, oldCh = oldVnode.children, ch = vnode.children;\n    if (oldVnode === vnode) return;\n    if (!sameVnode(oldVnode, vnode)) {\n      var parentElm = api.parentNode(oldVnode.elm);\n      elm = createElm(vnode, insertedVnodeQueue);\n      api.insertBefore(parentElm, elm, oldVnode.elm);\n      removeVnodes(parentElm, [oldVnode], 0, 0);\n      return;\n    }\n    if (isDef(vnode.data)) {\n      for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);\n      i = vnode.data.hook;\n      if (isDef(i) && isDef(i = i.update)) i(oldVnode, vnode);\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) api.setTextContent(elm, '');\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        api.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      api.setTextContent(elm, vnode.text);\n    }\n    if (isDef(hook) && isDef(i = hook.postpatch)) {\n      i(oldVnode, vnode);\n    }\n  }\n\n  return function(oldVnode, vnode) {\n    var i, elm, parent;\n    var insertedVnodeQueue = [];\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\n\n    if (isUndef(oldVnode.sel)) {\n      oldVnode = emptyNodeAt(oldVnode);\n    }\n\n    if (sameVnode(oldVnode, vnode)) {\n      patchVnode(oldVnode, vnode, insertedVnodeQueue);\n    } else {\n      elm = oldVnode.elm;\n      parent = api.parentNode(elm);\n\n      createElm(vnode, insertedVnodeQueue);\n\n      if (parent !== null) {\n        api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n        removeVnodes(parent, [oldVnode], 0, 0);\n      }\n    }\n\n    for (i = 0; i < insertedVnodeQueue.length; ++i) {\n      insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n    }\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\n    return vnode;\n  };\n}\n\nmodule.exports = {init: init};\n\n},{\"./htmldomapi.js\":3,\"./is\":4,\"./vnode\":6}],6:[function(require,module,exports){\nmodule.exports = function(sel, data, children, text, elm) {\n  var key = data === undefined ? undefined : data.key;\n  return {sel: sel, data: data, children: children,\n          text: text, elm: elm, key: key};\n};\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar Executor = require('./executor');\n\nfunction Benchmark() {\n  this.running = false;\n  this.impl = null;\n  this.tests = null;\n  this.reportCallback = null;\n  this.enableTests = false;\n\n  this.container = document.createElement('div');\n\n  this._runButton = document.getElementById('RunButton');\n  this._iterationsElement = document.getElementById('Iterations');\n  this._reportElement = document.createElement('pre');\n\n  document.body.appendChild(this.container);\n  document.body.appendChild(this._reportElement);\n\n  var self = this;\n\n  this._runButton.addEventListener('click', function(e) {\n    e.preventDefault();\n\n    if (!self.running) {\n      var iterations = parseInt(self._iterationsElement.value);\n      if (iterations <= 0) {\n        iterations = 10;\n      }\n\n      self.run(iterations);\n    }\n  }, false);\n\n  this.ready(true);\n}\n\nBenchmark.prototype.ready = function(v) {\n  if (v) {\n    this._runButton.disabled = '';\n  } else {\n    this._runButton.disabled = 'true';\n  }\n};\n\nBenchmark.prototype.run = function(iterations) {\n  var self = this;\n  this.running = true;\n  this.ready(false);\n\n  new Executor(self.impl, self.container, self.tests, 1, function() { // warmup\n    new Executor(self.impl, self.container, self.tests, iterations, function(samples) {\n      self._reportElement.textContent = JSON.stringify(samples, null, ' ');\n      self.running = false;\n      self.ready(true);\n      if (self.reportCallback != null) {\n        self.reportCallback(samples);\n      }\n    }, undefined, false).start();\n  }, undefined, this.enableTests).start();\n};\n\nmodule.exports = Benchmark;\n\n},{\"./executor\":8}],8:[function(require,module,exports){\n'use strict';\n\nfunction render(nodes) {\n  var children = [];\n  var j;\n  var c;\n  var i;\n  var e;\n  var n;\n\n  for (i = 0; i < nodes.length; i++) {\n    n = nodes[i];\n    if (n.children !== null) {\n      e = document.createElement('div');\n      c = render(n.children);\n      for (j = 0; j < c.length; j++) {\n        e.appendChild(c[j]);\n      }\n      children.push(e);\n    } else {\n      e = document.createElement('span');\n      e.textContent = n.key.toString();\n      children.push(e);\n    }\n  }\n\n  return children;\n}\n\nfunction testInnerHtml(testName, nodes, container) {\n  var c = document.createElement('div');\n  var e = document.createElement('div');\n  var children = render(nodes);\n  for (var i = 0; i < children.length; i++) {\n    e.appendChild(children[i]);\n  }\n  c.appendChild(e);\n  if (c.innerHTML !== container.innerHTML) {\n    console.log('error in test: ' + testName);\n    console.log('container.innerHTML:');\n    console.log(container.innerHTML);\n    console.log('should be:');\n    console.log(c.innerHTML);\n  }\n}\n\n\nfunction Executor(impl, container, tests, iterations, cb, iterCb, enableTests) {\n  if (iterCb === void 0) iterCb = null;\n\n  this.impl = impl;\n  this.container = container;\n  this.tests = tests;\n  this.iterations = iterations;\n  this.cb = cb;\n  this.iterCb = iterCb;\n  this.enableTests = enableTests;\n\n  this._currentTest = 0;\n  this._currentIter = 0;\n  this._renderSamples = [];\n  this._updateSamples = [];\n  this._result = [];\n\n  this._tasksCount = tests.length * iterations;\n\n  this._iter = this.iter.bind(this);\n}\n\nExecutor.prototype.start = function() {\n  this._iter();\n};\n\nExecutor.prototype.finished = function() {\n  this.cb(this._result);\n};\n\nExecutor.prototype.progress = function() {\n  if (this._currentTest === 0 && this._currentIter === 0) {\n    return 0;\n  }\n\n  var tests = this.tests;\n  return (this._currentTest * tests.length + this._currentIter) / (tests.length * this.iterataions);\n};\n\nExecutor.prototype.iter = function() {\n  if (this.iterCb != null) {\n    this.iterCb(this);\n  }\n\n  var tests = this.tests;\n\n  if (this._currentTest < tests.length) {\n    var test = tests[this._currentTest];\n\n    if (this._currentIter < this.iterations) {\n      var e, t;\n      var renderTime, updateTime;\n\n      e = new this.impl(this.container, test.data.a, test.data.b);\n      e.setUp();\n\n      t = window.performance.now();\n      e.render();\n      renderTime = window.performance.now() - t;\n\n      if (this.enableTests) {\n        testInnerHtml(test.name + 'render()', test.data.a, this.container);\n      }\n\n      t = window.performance.now();\n      e.update();\n      updateTime = window.performance.now() - t;\n\n      if (this.enableTests) {\n        testInnerHtml(test.name + 'update()', test.data.b, this.container);\n      }\n\n      e.tearDown();\n\n      this._renderSamples.push(renderTime);\n      this._updateSamples.push(updateTime);\n\n      this._currentIter++;\n    } else {\n      this._result.push({\n        name: test.name + ' ' + 'render()',\n        data: this._renderSamples.slice(0)\n      });\n\n      this._result.push({\n        name: test.name + ' ' + 'update()',\n        data: this._updateSamples.slice(0)\n      });\n\n      this._currentTest++;\n\n      this._currentIter = 0;\n      this._renderSamples = [];\n      this._updateSamples = [];\n    }\n\n    setTimeout(this._iter, 0);\n  } else {\n    this.finished();\n  }\n};\n\nmodule.exports = Executor;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nvar Benchmark = require('./benchmark');\nvar benchmark = new Benchmark();\n\nfunction initFromScript(scriptUrl, impl) {\n  var e = document.createElement('script');\n  e.src = scriptUrl;\n\n  e.onload = function() {\n    benchmark.tests = window.generateBenchmarkData().units;\n    benchmark.ready(true);\n  };\n\n  document.head.appendChild(e);\n}\n\nfunction initFromParentWindow(parent, name, version, id) {\n  window.addEventListener('message', function(e) {\n    var data = e.data;\n    var type = data.type;\n\n    if (type === 'tests') {\n      benchmark.tests = data.data;\n      benchmark.reportCallback = function(samples) {\n        parent.postMessage({\n          type: 'report',\n          data: {\n            name: name,\n            version: version,\n            samples: samples\n          },\n          id: id\n        }, '*');\n      };\n      benchmark.ready(true);\n\n      parent.postMessage({\n        type: 'ready',\n        data: null,\n        id: id\n      }, '*');\n    } else if (type === 'run') {\n      benchmark.run(data.data.iterations);\n    }\n  }, false);\n\n  parent.postMessage({\n    type: 'init',\n    data: null,\n    id: id\n  }, '*');\n}\n\nfunction init(name, version, impl) {\n  // Parse Query String.\n  var qs = (function(a) {\n    if (a == \"\") return {};\n    var b = {};\n    for (var i = 0; i < a.length; ++i) {\n      var p=a[i].split('=', 2);\n      if (p.length == 1) {\n        b[p[0]] = \"\";\n      } else {\n        b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n      }\n    }\n    return b;\n  })(window.location.search.substr(1).split('&'));\n\n  if (qs['name'] !== void 0) {\n    name = qs['name'];\n  }\n\n  if (qs['version'] !== void 0) {\n    version = qs['version'];\n  }\n\n  var type = qs['type'];\n\n  if (qs['test'] !== void 0) {\n    benchmark.enableTests = true;\n    console.log('tests enabled');\n  }\n\n  var id;\n  if (type === 'iframe') {\n    id = qs['id'];\n    if (id === void 0) id = null;\n    initFromParentWindow(window.parent, name, version, id);\n  } else if (type === 'window') {\n    if (window.opener != null) {\n      id = qs['id'];\n      if (id === void 0) id = null;\n      initFromParentWindow(window.opener, name, version, id);\n    } else {\n      console.log('Failed to initialize: opener window is NULL');\n    }\n  } else {\n    var testsUrl = qs['data']; // url to the script generating test data\n    if (testsUrl !== void 0) {\n      initFromScript(testsUrl);\n    } else {\n      console.log('Failed to initialize: cannot load tests data');\n    }\n  }\n\n  benchmark.impl = impl;\n}\n\n// performance.now() polyfill\n// https://gist.github.com/paulirish/5438650\n// prepare base perf object\nif (typeof window.performance === 'undefined') {\n  window.performance = {};\n}\nif (!window.performance.now){\n  var nowOffset = Date.now();\n  if (performance.timing && performance.timing.navigationStart) {\n    nowOffset = performance.timing.navigationStart;\n  }\n  window.performance.now = function now(){\n    return Date.now() - nowOffset;\n  };\n}\n\nmodule.exports = init;\n\n},{\"./benchmark\":7}]},{},[1])\n\n","var VNode = require('./vnode');\nvar is = require('./is');\n\nfunction addNS(data, children) {\n  data.ns = 'http://www.w3.org/2000/svg';\n  if (children !== undefined) {\n    for (var i = 0; i < children.length; ++i) {\n      addNS(children[i].data, children[i].children);\n    }\n  }\n}\n\nmodule.exports = function h(sel, b, c) {\n  var data = {}, children, text, i;\n  if (arguments.length === 3) {\n    data = b;\n    if (is.array(c)) { children = c; }\n    else if (is.primitive(c)) { text = c; }\n  } else if (arguments.length === 2) {\n    if (is.array(b)) { children = b; }\n    else if (is.primitive(b)) { text = b; }\n    else { data = b; }\n  }\n  if (is.array(children)) {\n    for (i = 0; i < children.length; ++i) {\n      if (is.primitive(children[i])) children[i] = VNode(undefined, undefined, undefined, children[i]);\n    }\n  }\n  if (sel[0] === 's' && sel[1] === 'v' && sel[2] === 'g') {\n    addNS(data, children);\n  }\n  return VNode(sel, data, children, text, undefined);\n};\n","function createElement(tagName){\n  return document.createElement(tagName);\n}\n\nfunction createElementNS(namespaceURI, qualifiedName){\n  return document.createElementNS(namespaceURI, qualifiedName);\n}\n\nfunction createTextNode(text){\n  return document.createTextNode(text);\n}\n\n\nfunction insertBefore(parentNode, newNode, referenceNode){\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\n\nfunction removeChild(node, child){\n  node.removeChild(child);\n}\n\nfunction appendChild(node, child){\n  node.appendChild(child);\n}\n\nfunction parentNode(node){\n  return node.parentElement;\n}\n\nfunction nextSibling(node){\n  return node.nextSibling;\n}\n\nfunction tagName(node){\n  return node.tagName;\n}\n\nfunction setTextContent(node, text){\n  node.textContent = text;\n}\n\nmodule.exports = {\n  createElement: createElement,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  appendChild: appendChild,\n  removeChild: removeChild,\n  insertBefore: insertBefore,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent\n};\n","module.exports = {\n  array: Array.isArray,\n  primitive: function(s) { return typeof s === 'string' || typeof s === 'number'; },\n};\n","// jshint newcap: false\n/* global require, module, document, Node */\n'use strict';\n\nvar VNode = require('./vnode');\nvar is = require('./is');\nvar domApi = require('./htmldomapi.js');\n\nfunction isUndef(s) { return s === undefined; }\nfunction isDef(s) { return s !== undefined; }\n\nvar emptyNode = VNode('', {}, [], undefined, undefined);\n\nfunction sameVnode(vnode1, vnode2) {\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  var i, map = {}, key;\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) map[key] = i;\n  }\n  return map;\n}\n\nvar hooks = ['create', 'update', 'remove', 'destroy', 'pre', 'post'];\n\nfunction init(modules, api) {\n  var i, j, cbs = {};\n\n  if (isUndef(api)) api = domApi;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks[i]] !== undefined) cbs[hooks[i]].push(modules[j][hooks[i]]);\n    }\n  }\n\n  function emptyNodeAt(elm) {\n    return VNode(api.tagName(elm).toLowerCase(), {}, [], undefined, elm);\n  }\n\n  function createRmCb(childElm, listeners) {\n    return function() {\n      if (--listeners === 0) {\n        var parent = api.parentNode(childElm);\n        api.removeChild(parent, childElm);\n      }\n    };\n  }\n\n  function createElm(vnode, insertedVnodeQueue) {\n    var i, thunk, data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode);\n      if (isDef(i = data.vnode)) {\n          thunk = vnode;\n          vnode = i;\n      }\n    }\n    var elm, children = vnode.children, sel = vnode.sel;\n    if (isDef(sel)) {\n      // Parse selector\n      var hashIdx = sel.indexOf('#');\n      var dotIdx = sel.indexOf('.', hashIdx);\n      var hash = hashIdx > 0 ? hashIdx : sel.length;\n      var dot = dotIdx > 0 ? dotIdx : sel.length;\n      var tag = hashIdx !== -1 || dotIdx !== -1 ? sel.slice(0, Math.min(hash, dot)) : sel;\n      elm = vnode.elm = isDef(data) && isDef(i = data.ns) ? api.createElementNS(i, tag)\n                                                          : api.createElement(tag);\n      if (hash < dot) elm.id = sel.slice(hash + 1, dot);\n      if (dotIdx > 0) elm.className = sel.slice(dot+1).replace(/\\./g, ' ');\n      if (is.array(children)) {\n        for (i = 0; i < children.length; ++i) {\n          api.appendChild(elm, createElm(children[i], insertedVnodeQueue));\n        }\n      } else if (is.primitive(vnode.text)) {\n        api.appendChild(elm, api.createTextNode(vnode.text));\n      }\n      for (i = 0; i < cbs.create.length; ++i) cbs.create[i](emptyNode, vnode);\n      i = vnode.data.hook; // Reuse variable\n      if (isDef(i)) {\n        if (i.create) i.create(emptyNode, vnode);\n        if (i.insert) insertedVnodeQueue.push(vnode);\n      }\n    } else {\n      elm = vnode.elm = api.createTextNode(vnode.text);\n    }\n    if (isDef(thunk)) thunk.elm = vnode.elm;\n    return vnode.elm;\n  }\n\n  function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      api.insertBefore(parentElm, createElm(vnodes[startIdx], insertedVnodeQueue), before);\n    }\n  }\n\n  function invokeDestroyHook(vnode) {\n    var i, j, data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode);\n      for (i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode);\n      if (isDef(i = vnode.children)) {\n        for (j = 0; j < vnode.children.length; ++j) {\n          invokeDestroyHook(vnode.children[j]);\n        }\n      }\n      if (isDef(i = data.vnode)) invokeDestroyHook(i);\n    }\n  }\n\n  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var i, listeners, rm, ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.sel)) {\n          invokeDestroyHook(ch);\n          listeners = cbs.remove.length + 1;\n          rm = createRmCb(ch.elm, listeners);\n          for (i = 0; i < cbs.remove.length; ++i) cbs.remove[i](ch, rm);\n          if (isDef(i = ch.data) && isDef(i = i.hook) && isDef(i = i.remove)) {\n            i(ch, rm);\n          } else {\n            rm();\n          }\n        } else { // Text node\n          api.removeChild(parentElm, ch.elm);\n        }\n      }\n    }\n  }\n\n  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {\n    var oldStartIdx = 0, newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, before;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        idxInOld = oldKeyToIdx[newStartVnode.key];\n        if (isUndef(idxInOld)) { // New element\n          api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n          oldCh[idxInOld] = undefined;\n          api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      before = isUndef(newCh[newEndIdx+1]) ? null : newCh[newEndIdx+1].elm;\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode(oldVnode, vnode, insertedVnodeQueue) {\n    var i, hook;\n    if (isDef(i = vnode.data) && isDef(hook = i.hook) && isDef(i = hook.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    if (isDef(i = oldVnode.data) && isDef(i = i.vnode)) oldVnode = i;\n    if (isDef(i = vnode.data) && isDef(i = i.vnode)) {\n      patchVnode(oldVnode, i, insertedVnodeQueue);\n      vnode.elm = i.elm;\n      return;\n    }\n    var elm = vnode.elm = oldVnode.elm, oldCh = oldVnode.children, ch = vnode.children;\n    if (oldVnode === vnode) return;\n    if (!sameVnode(oldVnode, vnode)) {\n      var parentElm = api.parentNode(oldVnode.elm);\n      elm = createElm(vnode, insertedVnodeQueue);\n      api.insertBefore(parentElm, elm, oldVnode.elm);\n      removeVnodes(parentElm, [oldVnode], 0, 0);\n      return;\n    }\n    if (isDef(vnode.data)) {\n      for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode);\n      i = vnode.data.hook;\n      if (isDef(i) && isDef(i = i.update)) i(oldVnode, vnode);\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue);\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) api.setTextContent(elm, '');\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        api.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      api.setTextContent(elm, vnode.text);\n    }\n    if (isDef(hook) && isDef(i = hook.postpatch)) {\n      i(oldVnode, vnode);\n    }\n  }\n\n  return function(oldVnode, vnode) {\n    var i, elm, parent;\n    var insertedVnodeQueue = [];\n    for (i = 0; i < cbs.pre.length; ++i) cbs.pre[i]();\n\n    if (isUndef(oldVnode.sel)) {\n      oldVnode = emptyNodeAt(oldVnode);\n    }\n\n    if (sameVnode(oldVnode, vnode)) {\n      patchVnode(oldVnode, vnode, insertedVnodeQueue);\n    } else {\n      elm = oldVnode.elm;\n      parent = api.parentNode(elm);\n\n      createElm(vnode, insertedVnodeQueue);\n\n      if (parent !== null) {\n        api.insertBefore(parent, vnode.elm, api.nextSibling(elm));\n        removeVnodes(parent, [oldVnode], 0, 0);\n      }\n    }\n\n    for (i = 0; i < insertedVnodeQueue.length; ++i) {\n      insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);\n    }\n    for (i = 0; i < cbs.post.length; ++i) cbs.post[i]();\n    return vnode;\n  };\n}\n\nmodule.exports = {init: init};\n","module.exports = function(sel, data, children, text, elm) {\n  var key = data === undefined ? undefined : data.key;\n  return {sel: sel, data: data, children: children,\n          text: text, elm: elm, key: key};\n};\n","'use strict';\n\nvar Executor = require('./executor');\n\nfunction Benchmark() {\n  this.running = false;\n  this.impl = null;\n  this.tests = null;\n  this.reportCallback = null;\n  this.enableTests = false;\n\n  this.container = document.createElement('div');\n\n  this._runButton = document.getElementById('RunButton');\n  this._iterationsElement = document.getElementById('Iterations');\n  this._reportElement = document.createElement('pre');\n\n  document.body.appendChild(this.container);\n  document.body.appendChild(this._reportElement);\n\n  var self = this;\n\n  this._runButton.addEventListener('click', function(e) {\n    e.preventDefault();\n\n    if (!self.running) {\n      var iterations = parseInt(self._iterationsElement.value);\n      if (iterations <= 0) {\n        iterations = 10;\n      }\n\n      self.run(iterations);\n    }\n  }, false);\n\n  this.ready(true);\n}\n\nBenchmark.prototype.ready = function(v) {\n  if (v) {\n    this._runButton.disabled = '';\n  } else {\n    this._runButton.disabled = 'true';\n  }\n};\n\nBenchmark.prototype.run = function(iterations) {\n  var self = this;\n  this.running = true;\n  this.ready(false);\n\n  new Executor(self.impl, self.container, self.tests, 1, function() { // warmup\n    new Executor(self.impl, self.container, self.tests, iterations, function(samples) {\n      self._reportElement.textContent = JSON.stringify(samples, null, ' ');\n      self.running = false;\n      self.ready(true);\n      if (self.reportCallback != null) {\n        self.reportCallback(samples);\n      }\n    }, undefined, false).start();\n  }, undefined, this.enableTests).start();\n};\n\nmodule.exports = Benchmark;\n","'use strict';\n\nfunction render(nodes) {\n  var children = [];\n  var j;\n  var c;\n  var i;\n  var e;\n  var n;\n\n  for (i = 0; i < nodes.length; i++) {\n    n = nodes[i];\n    if (n.children !== null) {\n      e = document.createElement('div');\n      c = render(n.children);\n      for (j = 0; j < c.length; j++) {\n        e.appendChild(c[j]);\n      }\n      children.push(e);\n    } else {\n      e = document.createElement('span');\n      e.textContent = n.key.toString();\n      children.push(e);\n    }\n  }\n\n  return children;\n}\n\nfunction testInnerHtml(testName, nodes, container) {\n  var c = document.createElement('div');\n  var e = document.createElement('div');\n  var children = render(nodes);\n  for (var i = 0; i < children.length; i++) {\n    e.appendChild(children[i]);\n  }\n  c.appendChild(e);\n  if (c.innerHTML !== container.innerHTML) {\n    console.log('error in test: ' + testName);\n    console.log('container.innerHTML:');\n    console.log(container.innerHTML);\n    console.log('should be:');\n    console.log(c.innerHTML);\n  }\n}\n\n\nfunction Executor(impl, container, tests, iterations, cb, iterCb, enableTests) {\n  if (iterCb === void 0) iterCb = null;\n\n  this.impl = impl;\n  this.container = container;\n  this.tests = tests;\n  this.iterations = iterations;\n  this.cb = cb;\n  this.iterCb = iterCb;\n  this.enableTests = enableTests;\n\n  this._currentTest = 0;\n  this._currentIter = 0;\n  this._renderSamples = [];\n  this._updateSamples = [];\n  this._result = [];\n\n  this._tasksCount = tests.length * iterations;\n\n  this._iter = this.iter.bind(this);\n}\n\nExecutor.prototype.start = function() {\n  this._iter();\n};\n\nExecutor.prototype.finished = function() {\n  this.cb(this._result);\n};\n\nExecutor.prototype.progress = function() {\n  if (this._currentTest === 0 && this._currentIter === 0) {\n    return 0;\n  }\n\n  var tests = this.tests;\n  return (this._currentTest * tests.length + this._currentIter) / (tests.length * this.iterataions);\n};\n\nExecutor.prototype.iter = function() {\n  if (this.iterCb != null) {\n    this.iterCb(this);\n  }\n\n  var tests = this.tests;\n\n  if (this._currentTest < tests.length) {\n    var test = tests[this._currentTest];\n\n    if (this._currentIter < this.iterations) {\n      var e, t;\n      var renderTime, updateTime;\n\n      e = new this.impl(this.container, test.data.a, test.data.b);\n      e.setUp();\n\n      t = window.performance.now();\n      e.render();\n      renderTime = window.performance.now() - t;\n\n      if (this.enableTests) {\n        testInnerHtml(test.name + 'render()', test.data.a, this.container);\n      }\n\n      t = window.performance.now();\n      e.update();\n      updateTime = window.performance.now() - t;\n\n      if (this.enableTests) {\n        testInnerHtml(test.name + 'update()', test.data.b, this.container);\n      }\n\n      e.tearDown();\n\n      this._renderSamples.push(renderTime);\n      this._updateSamples.push(updateTime);\n\n      this._currentIter++;\n    } else {\n      this._result.push({\n        name: test.name + ' ' + 'render()',\n        data: this._renderSamples.slice(0)\n      });\n\n      this._result.push({\n        name: test.name + ' ' + 'update()',\n        data: this._updateSamples.slice(0)\n      });\n\n      this._currentTest++;\n\n      this._currentIter = 0;\n      this._renderSamples = [];\n      this._updateSamples = [];\n    }\n\n    setTimeout(this._iter, 0);\n  } else {\n    this.finished();\n  }\n};\n\nmodule.exports = Executor;\n","'use strict';\n\nvar Benchmark = require('./benchmark');\nvar benchmark = new Benchmark();\n\nfunction initFromScript(scriptUrl, impl) {\n  var e = document.createElement('script');\n  e.src = scriptUrl;\n\n  e.onload = function() {\n    benchmark.tests = window.generateBenchmarkData().units;\n    benchmark.ready(true);\n  };\n\n  document.head.appendChild(e);\n}\n\nfunction initFromParentWindow(parent, name, version, id) {\n  window.addEventListener('message', function(e) {\n    var data = e.data;\n    var type = data.type;\n\n    if (type === 'tests') {\n      benchmark.tests = data.data;\n      benchmark.reportCallback = function(samples) {\n        parent.postMessage({\n          type: 'report',\n          data: {\n            name: name,\n            version: version,\n            samples: samples\n          },\n          id: id\n        }, '*');\n      };\n      benchmark.ready(true);\n\n      parent.postMessage({\n        type: 'ready',\n        data: null,\n        id: id\n      }, '*');\n    } else if (type === 'run') {\n      benchmark.run(data.data.iterations);\n    }\n  }, false);\n\n  parent.postMessage({\n    type: 'init',\n    data: null,\n    id: id\n  }, '*');\n}\n\nfunction init(name, version, impl) {\n  // Parse Query String.\n  var qs = (function(a) {\n    if (a == \"\") return {};\n    var b = {};\n    for (var i = 0; i < a.length; ++i) {\n      var p=a[i].split('=', 2);\n      if (p.length == 1) {\n        b[p[0]] = \"\";\n      } else {\n        b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\n      }\n    }\n    return b;\n  })(window.location.search.substr(1).split('&'));\n\n  if (qs['name'] !== void 0) {\n    name = qs['name'];\n  }\n\n  if (qs['version'] !== void 0) {\n    version = qs['version'];\n  }\n\n  var type = qs['type'];\n\n  if (qs['test'] !== void 0) {\n    benchmark.enableTests = true;\n    console.log('tests enabled');\n  }\n\n  var id;\n  if (type === 'iframe') {\n    id = qs['id'];\n    if (id === void 0) id = null;\n    initFromParentWindow(window.parent, name, version, id);\n  } else if (type === 'window') {\n    if (window.opener != null) {\n      id = qs['id'];\n      if (id === void 0) id = null;\n      initFromParentWindow(window.opener, name, version, id);\n    } else {\n      console.log('Failed to initialize: opener window is NULL');\n    }\n  } else {\n    var testsUrl = qs['data']; // url to the script generating test data\n    if (testsUrl !== void 0) {\n      initFromScript(testsUrl);\n    } else {\n      console.log('Failed to initialize: cannot load tests data');\n    }\n  }\n\n  benchmark.impl = impl;\n}\n\n// performance.now() polyfill\n// https://gist.github.com/paulirish/5438650\n// prepare base perf object\nif (typeof window.performance === 'undefined') {\n  window.performance = {};\n}\nif (!window.performance.now){\n  var nowOffset = Date.now();\n  if (performance.timing && performance.timing.navigationStart) {\n    nowOffset = performance.timing.navigationStart;\n  }\n  window.performance.now = function now(){\n    return Date.now() - nowOffset;\n  };\n}\n\nmodule.exports = init;\n"],"sourceRoot":"/source/"}